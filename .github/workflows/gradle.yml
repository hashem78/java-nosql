# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Lint and fix with Spotless
        run: |
          ./gradlew spotlessApply

          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

          # Use the PAT for authentication
          git remote set-url origin https://x-access-token:${{ secrets.REPO_ACCESS_TOKEN }}@github.com/hashem78/java-nosql.git

          git add -u
          git commit -m "Apply code formatting fixes" || echo "No changes to commit"
          git push
      

      # Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      # Build and Push "node" Docker image
      - name: Build and Push "node" Docker image
        run: |
          docker build -f node/Dockerfile -t ${{ secrets.DOCKER_HUB_USERNAME }}/nosql-node:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/nosql-node:latest

      # Build and Push "bootstrap-server" Docker image (if needed)
      - name: Build and Push "bootstrap-server" Docker image
        run: |
          docker build -f bootstrap-server/Dockerfile -t ${{ secrets.DOCKER_HUB_USERNAME }}/nosql-bootstrap:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/nosql-bootstrap:latest
